// <auto-generated />
using System;
using ExitoLogGames.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExitoLogGames.App.Persistencia.Migrations
{
    [DbContext(typeof(Connection))]
    [Migration("20211019201149_actualizacion")]
    partial class actualizacion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ExitoLogGames.App.Dominio.Consola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CantidadControles")
                        .HasColumnType("int");

                    b.Property<string>("CapacidadAlmacenamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Fabricante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<string>("Storage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VelocidadProcesamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VelocidadRam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("consolas");
                });

            modelBuilder.Entity("ExitoLogGames.App.Dominio.Control", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Compatibilidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Fabricante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("controles");
                });

            modelBuilder.Entity("ExitoLogGames.App.Dominio.Employ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sucursal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("empleados");
                });

            modelBuilder.Entity("ExitoLogGames.App.Dominio.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CantidadConsolas")
                        .HasColumnType("int");

                    b.Property<int>("CantidadControles")
                        .HasColumnType("int");

                    b.Property<int>("CantidadVideojuegos")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Pagada")
                        .HasColumnType("bit");

                    b.Property<int?>("PedidoConsolasId")
                        .HasColumnType("int");

                    b.Property<int?>("PedidoControlesId")
                        .HasColumnType("int");

                    b.Property<int?>("PedidoVideojuegosId")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<int?>("empleadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoConsolasId");

                    b.HasIndex("PedidoControlesId");

                    b.HasIndex("PedidoVideojuegosId");

                    b.HasIndex("empleadoId");

                    b.ToTable("facturas");
                });

            modelBuilder.Entity("ExitoLogGames.App.Dominio.Videojuego", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Compatibilidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Fabricante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("videojuegos");
                });

            modelBuilder.Entity("ExitoLogGames.App.Dominio.Factura", b =>
                {
                    b.HasOne("ExitoLogGames.App.Dominio.Consola", "PedidoConsolas")
                        .WithMany()
                        .HasForeignKey("PedidoConsolasId");

                    b.HasOne("ExitoLogGames.App.Dominio.Control", "PedidoControles")
                        .WithMany()
                        .HasForeignKey("PedidoControlesId");

                    b.HasOne("ExitoLogGames.App.Dominio.Videojuego", "PedidoVideojuegos")
                        .WithMany()
                        .HasForeignKey("PedidoVideojuegosId");

                    b.HasOne("ExitoLogGames.App.Dominio.Employ", "empleado")
                        .WithMany()
                        .HasForeignKey("empleadoId");

                    b.Navigation("empleado");

                    b.Navigation("PedidoConsolas");

                    b.Navigation("PedidoControles");

                    b.Navigation("PedidoVideojuegos");
                });
#pragma warning restore 612, 618
        }
    }
}
